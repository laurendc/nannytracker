name: Cleanup Stale Branches

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cleanup stale branches
        run: |
          # Configurable branch age threshold (in days)
          BRANCH_AGE_DAYS=7
          echo "Branch age threshold for deletion: $BRANCH_AGE_DAYS days"
          
          # Get all branches except main
          BRANCHES=$(git branch -r | grep -v 'origin/main$' | grep -v 'origin/HEAD' | sed 's/origin\///')
          
          for branch in $BRANCHES; do
            # Skip protected branches
            if [[ "$branch" == "main" || "$branch" == "master" ]]; then
              echo "Skipping protected branch: $branch"
              continue
            fi
            
            # Get the last commit date
            LAST_COMMIT_DATE=$(git log -1 --format=%ct origin/$branch)
            CURRENT_DATE=$(date +%s)
            DAYS_SINCE_LAST_COMMIT=$(( ($CURRENT_DATE - $LAST_COMMIT_DATE) / 86400 ))
            echo "Branch $branch: $DAYS_SINCE_LAST_COMMIT days since last commit"
            
            # Delete branch if it's older than threshold and has no open PRs
            if [ $DAYS_SINCE_LAST_COMMIT -gt $BRANCH_AGE_DAYS ]; then
              # Check if branch has open PRs using GitHub API
              PR_COUNT=$(curl -s -H "Authorization: token ${{ github.token }}" \
                "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&head=${{ github.repository_owner }}:$branch" | \
                jq length)
              
              if [ "$PR_COUNT" = "0" ]; then
                echo "Deleting stale branch: $branch (last commit: $DAYS_SINCE_LAST_COMMIT days ago)"
                git push origin --delete $branch
              else
                echo "Skipping branch $branch - has $PR_COUNT open PR(s)"
              fi
            else
              echo "Skipping branch $branch - only $DAYS_SINCE_LAST_COMMIT days old"
            fi
          done 