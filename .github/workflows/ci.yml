name: Go CI

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main, feature/* ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # Updated to a valid version

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v

      - name: Run linter
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run ./...

      - name: Run security checks
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec ./...

      - name: Check formatting
        run: |
          if [ -n "$(go fmt ./...)" ]; then
            echo "Code is not formatted correctly. Please run 'go fmt ./...'"
            exit 1
          fi

  merge-to-main:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Merge to main
        run: |
          git checkout main
          git pull origin main
          if ! git merge --no-ff --log ${{ github.ref_name }} -m "Merge feature branch: ${{ github.ref_name }}"; then
            echo "Merge failed"
            exit 1
          fi
          git push origin main
